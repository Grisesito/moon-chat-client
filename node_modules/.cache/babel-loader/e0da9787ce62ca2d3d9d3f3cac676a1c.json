{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\"; // import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n\nimport './Chat.css';\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState(''); //   const [room, setRoom] = useState('');\n  //   const [users, setUsers] = useState('');\n  //   const [message, setMessage] = useState('');\n  //   const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const {\n      name\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT); // setRoom(room);\n\n    setName(name);\n    socket.emit('join', {\n      name\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]); //   useEffect(() => {\n  //     socket.on('message', message => {\n  //       setMessages(messages => [ ...messages, message ]);\n  //     });\n  //     socket.on(\"roomData\", ({ users }) => {\n  //       setUsers(users);\n  //     });\n  // }, []);\n  //   const sendMessage = (event) => {\n  //     event.preventDefault();\n  //     if(message) {\n  //       socket.emit('sendMessage', message, () => setMessage(''));\n  //     }\n  //   }\n  //   return (\n  //     <div className=\"outerContainer\">\n  //       <div className=\"container\">\n  //           <InfoBar room={room} />\n  //           <Messages messages={messages} name={name} />\n  //           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n  //       </div>\n  //       <TextContainer users={users}/>\n  //     </div>\n  //   );\n};\n\n_s(Chat, \"nVbhOIYDoHElhkRqYpJCqH0DXNE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Gris/Documents/projects/moon-chat/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","ENDPOINT","socket","Chat","location","name","setName","parse","search","emit","error","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAD6B,CAE/B;AACA;AACA;AACA;;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEO,MAAAA;AAAF,QAAWN,WAAW,CAACQ,KAAZ,CAAkBH,QAAQ,CAACI,MAA3B,CAAjB;AAEAN,IAAAA,MAAM,GAAGF,EAAE,CAACC,QAAD,CAAX,CAHc,CAKd;;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACO,IAAP,CAAY,MAAZ,EAAoB;AAAEJ,MAAAA;AAAF,KAApB,EAA+BK,KAAD,IAAW;AACvC,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACN,QAAQ,CAACI,MAAV,CAbM,CAAT,CAP6B,CAsB/B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAlDD;;GAAML,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n// import Messages from '../Messages/Messages';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = 'localhost:5000';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n//   const [room, setRoom] = useState('');\r\n//   const [users, setUsers] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { name } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    // setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit('join', { name }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [location.search]);\r\n  \r\n//   useEffect(() => {\r\n//     socket.on('message', message => {\r\n//       setMessages(messages => [ ...messages, message ]);\r\n//     });\r\n    \r\n//     socket.on(\"roomData\", ({ users }) => {\r\n//       setUsers(users);\r\n//     });\r\n// }, []);\r\n\r\n//   const sendMessage = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if(message) {\r\n//       socket.emit('sendMessage', message, () => setMessage(''));\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"outerContainer\">\r\n//       <div className=\"container\">\r\n//           <InfoBar room={room} />\r\n//           <Messages messages={messages} name={name} />\r\n//           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n//       </div>\r\n//       <TextContainer users={users}/>\r\n//     </div>\r\n//   );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}